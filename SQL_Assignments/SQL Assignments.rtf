{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\froman\fcharset0 TimesNewRomanPS-BoldMT;
\f3\froman\fcharset0 TimesNewRomanPSMT;\f4\froman\fcharset0 Times-Roman;\f5\froman\fcharset0 Times-Bold;
\f6\fmodern\fcharset0 Courier;\f7\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red251\green2\blue7;\red0\green0\blue255;\red0\green0\blue0;
\red253\green128\blue8;\red251\green2\blue255;\red24\green25\blue26;\red255\green255\blue255;\red153\green102\blue51;
\red38\green47\blue56;\red24\green25\blue27;\red223\green33\blue121;\red39\green39\blue39;\red38\green38\blue38;
\red29\green38\blue43;\red127\green0\blue128;}
{\*\expandedcolortbl;;\cssrgb\c100000\c14913\c0;\cssrgb\c1680\c19835\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c100000\c57637\c0;\cssrgb\c100000\c25279\c100000;\cssrgb\c12549\c12941\c13333;\cssrgb\c100000\c100000\c100000;\cssrgb\c66800\c47512\c25860;
\cssrgb\c19608\c24314\c28235;\cssrgb\c12549\c12941\c14118;\cssrgb\c90980\c24314\c54902;\cssrgb\c20392\c20392\c20392;\cssrgb\c20000\c20000\c20000;
\cssrgb\c15294\c19608\c22353;\cssrgb\c57919\c12801\c57269;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh15020\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc\partightenfactor0

\f0\fs36 \cf0 \

\fs48 \cf2 \ul \ulc2 \'93 SQL  ASSIGNMENTS \'92\'92\ulnone \

\fs36 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf3 1) 
\f2 What do you understand By Database?\

\f3\b0 \expnd0\expndtw0\kerning0
\
\cf4 :-  Database is a collection of large amount of data.\
:-  We can store and retrieve large amount of data using database.\
\

\f4 \

\f5\b \cf3 \kerning1\expnd0\expndtw0 2) 
\f2 	What is Normalization? 
\f3\b0 \expnd0\expndtw0\kerning0
\
\
\cf4 :-  Normalization is the process of organizing data in a database.\
:-  It is a multi-step process that sets the data into tabular form and removes the duplicated data from the relational tables.\
\
:-  Most commonly used normal forms :\
\
    1. First normal form (1NF)\
    2. Second normal form(2NF)\
    3. Third normal form(3NF)\
    4. Boyce & Codd normal form(BCNF)\
\

\f2\b \cf3 \kerning1\expnd0\expndtw0 3) 	What is Difference between DBMS and RDBMS? 
\f3\b0 \expnd0\expndtw0\kerning0
\
\
 \cf4 DBMS : \
\
:-  Data store is in the file format.\
\
:-  No connection between data.\
\
:-  Data stored in a small quantity.\
\
:-  DBMS supports a single user.\
\
\
 RDBMS : \
\
:- Data stored in a table format.\
\
:- Data in the form of table are linked together.\
\
:- Data is stored in a large amount.\
\
:- RDBMS supports multiple users.
\f4 \cf3 \uc0\u8232 \cf4 \
\

\f5\b \cf3 \kerning1\expnd0\expndtw0 4) What is EF code Rule of RDBMS Systems?\

\f4\b0 \expnd0\expndtw0\kerning0
\
\cf5 ->  Rule 0 : The Foundation Rule\cf6 \
\cf4 \
:-  For any system that is advertised as, or claimed to be, a relational data base management system, that system must be able to manage data bases entirely through its relational capabilities.\
\
\cf5 -> Rule 1 : The information Rule\cf4 \
\
:-  All information in a relational data base is represented explicitly at the logical level and in exactly one way - by values in table.\
\
\cf5 -> Rule 2 : The guaranteed access Rule\
\
\cf4 :-  Each and every datum in a relational database is guaranteed to be logically accessible \cf7 \cb8 by resorting to a combination of table name, primary key value and column name.\cf4 \cb1 \
\
\cf5 -> Rule 3 : Systematic treatment of null values \
\cf4 \
:-  Null values are supported in fully relational DBMS for representing missing information and inapplicable  information in a systematic way, independent of data type.\
\
\cf5 -> Rule 4 : Dynamic online catalog based the relational model : \
\cf4 \
:-  The database description is represented at the logical level in the same way as ordinary data, so that authorized  users can apply the same relational language to its interrogation as they apply to the regular data.\
\
\cf5 -> Rule 5 : The comprehensive data sublanguage  Rule : \
\cf4 \
:-  A relational system may support several languages and various modes of terminal use.\
\
\cf5 -> Rule 6 : The view updating Rule : \cf4 \
\
:-  All views that are theoretically  \cf7 \cb8 updatable are also updatable by the system.\
\
\cf5 -> Rule 7 : Relational Operations Rule :\
\
\cf4 :-  The capability of handling a base relational or a derived relation as a single operand applies not only to the \cf7 retrieval of data but also to the insertion, update and deletion of data.\
\
\cf5 -> Rule 8 : Physical data independence : \cf9 \cb1 \
\
\cf4 :-  Application Programs and terminal activities remain \cf7 \cb8 logically unimpaired whenever any changes are made in either storage representations or access methods.\
\
\cf5 -> Rule 9 : Logical data independence : \
\
\cf4 :-  Application Programs and terminal activities remain logically unimpaired  when information - preserving changes of any kind that theoretically permit \cf7 unimpairment are made to the base tables.\
\
\cf5 -> Rule 10 : Integrity independence : \cf9 \cb1 \
\cf3 \
\cf4 :- Integrity constraints \cf7 \cb8 specific to a particular relational data base must be definable in the relational data sublanguage and storable in the catalog, not in the application programs.\
\
\cf5 -> Rule 11 : Distribution independence : \
\
\cf4 :-  The end - user 
\f3 \cf7 must not be able to see that the data is distributed over various locations. Users should always get the impression that the data is located at one site only.\cf3 \cb1 \
\

\f4 \cf5 -> Rule 12 : 
\f3 \cb8 The non subversion  Rule:\
\
\cf4 :- If a relational system has a l\cf7 ow-level (single-record-at-a-time) language, that low level cannot be used to subvert or bypass the integrity rules and constraints expressed in the higher level relational language (multiple-records-at-a-time).\cb1 \
\cf5 \
\

\f2\b \cf3 \kerning1\expnd0\expndtw0 5) 
\fs37\fsmilli18667 What do you understand By Data Redundancy? \

\f5\fs36 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f4\b0 \cf10 \expnd0\expndtw0\kerning0
:-   Data redundancy occurs when the same piece of data is stored in two or more separate places and
\f5\b \'a0
\f4\b0 \cf0 \kerning1\expnd0\expndtw0 is \cf10 \expnd0\expndtw0\kerning0
a common occurrence in many businesses. As more companies are moving\'a0 away from siloed                     data to using a central repository to store information, they are finding that their database is filled with inconsistent duplicates of the same entry. Although it can be challenging to reconcile \'97 or even benefit from \'97 duplicate data entries, understanding how to reduce and track data redundancy efficiently can help mitigate long-term inconsistency issues for your business.\'a0\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f5\b \cf3 \kerning1\expnd0\expndtw0 6) 
\f2\fs37\fsmilli18667 What is DDL Interpreter? \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f3\b0 \cf0 :- 
\fs36 \cf11 \cb8 \expnd0\expndtw0\kerning0
DDL Interpreter DDL expands to Data Definition Language. DDL Interpreter as the name suggests interprets the DDL statements such as schema definition statements like create,  delete etc. The result of this interpretation is a set of a table that contains the meta-data which is stored in the data dictionary.
\f2\b \cf3 \cb1 \kerning1\expnd0\expndtw0 \uc0\u8232 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f5 \cf3 7) What is DML Compiler in SQL? \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f3\b0 \cf0 :- \cb8 \expnd0\expndtw0\kerning0
DML Compiler: Translates DML statements in a query language within low level instructions understandable through the query evaluation engine. Attempts to transforms users request within an equivalent and well organized from for executing the query understandable through Data Manager, Interprets DDL statements and records them within a set of tables containing Meta data in a form that can be used through other elements of a DBMS.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\b \cf3 \cb1 \kerning1\expnd0\expndtw0 8) 
\fs37\fsmilli18667 What is SQL Key Constraints writing an Example of SQL Key Constraints ?\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f3\b0 \cf4 \

\fs36 :- \cb8 \expnd0\expndtw0\kerning0
Constraints or nothing but\'a0the rules that are to be followed while entering data into columns of the database table.\
\
\pard\pardeftab720\partightenfactor0
\cf12 :-  NOT NULL :\cf4 \'a0\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf4 => \cf0 \cb1 \kerning1\expnd0\expndtw0 Ensures that the specified\'a0column doesn\'92t contain a NULL value.\
\
\pard\pardeftab720\partightenfactor0
\cf12 \cb8 \expnd0\expndtw0\kerning0
:-  UNIQUE :\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf4 => \cf0 \cb1 \kerning1\expnd0\expndtw0 Provides a unique/distinct values\'a0to specified columns.\
\
\pard\pardeftab720\partightenfactor0
\cf12 \cb8 \expnd0\expndtw0\kerning0
:-  DEFAULT :\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf4 => \cf0 \cb1 \kerning1\expnd0\expndtw0 Provides a default value\'a0to a column\'a0if none is specified.\
\
\pard\pardeftab720\partightenfactor0
\cf12 \cb8 \expnd0\expndtw0\kerning0
:-  CHECK  :\cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
=> Checks for the predefined conditions before inserting\'a0the data inside the table.\
\
\pard\pardeftab720\partightenfactor0
\cf12 \cb8 \expnd0\expndtw0\kerning0
:-  PRIMARY KEY :\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf4 =>\cf0 \cb1 \kerning1\expnd0\expndtw0  It\'a0uniquely identifies a row\'a0in a table.\
\
Example : \
\
\pard\pardeftab720\partightenfactor0
\cf4 \cb8 \expnd0\expndtw0\kerning0
CREATE TABLE EMP ( \
\'a0\'a0ID \'a0 INT \'a0 \'a0 \'a0 \'a0 \'a0 \
\'a0 NAME VARCHAR (20) \'a0 \'a0\'a0 \'a0\
\'a0 AGE \'a0INT \'a0 \'a0 \'a0 \
\'a0 COURSE VARCHAR(10) \'a0 \'a0\
  PRIMARY KEY (ID) \
);\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
\pard\pardeftab720\partightenfactor0
\cf12 \cb8 \expnd0\expndtw0\kerning0
:- FOREIGN KEY :\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf4 => \cf0 \cb1 \kerning1\expnd0\expndtw0 Ensures\'a0referential integrity\'a0of the relationship.\
\
Example : \
\
\pard\pardeftab720\li200\fi-200\ri200\sa500\partightenfactor0

\f5\b \cf13 \cb8 \expnd0\expndtw0\kerning0
\ul \ulc13 Reference Table\
\pard\pardeftab720\partightenfactor0

\f4\b0 \cf4 \ulnone CREATE TABLE CUSTOMERS1(\
\'a0\'a0\'a0ID \'a0 INT ,\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0 NAME VARCHAR (20)\'a0,\
   COURSE VARCHAR(10) ,\
\'a0\'a0\'a0PRIMARY KEY (ID)\
);\'a0\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f3 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
\pard\pardeftab720\li200\fi-200\ri200\sa500\partightenfactor0

\f5\b \cf13 \cb8 \expnd0\expndtw0\kerning0
\ul Child Table\
\pard\pardeftab720\partightenfactor0

\f4\b0 \cf4 \ulnone CREATE TABLE CUSTOMERS2(\
\'a0\'a0\'a0ID \'a0 INT ,\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0MARKS INT,\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0REFERENCES CUSTOMERS1(ID)\
);\'a0\
\pard\pardeftab720\li200\fi-200\ri200\sa500\partightenfactor0
\cf13 \ul \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\b \cf3 \cb1 \kerning1\expnd0\expndtw0 \ulnone 9) What is save point? How to create a save point write a Query?\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f3\b0 \cf0 :- \cf14 \cb8 \expnd0\expndtw0\kerning0
Savepoint is a command in SQL that is used with the rollback command.\
\
:- \cf0 When you set a save point, whenever an error occurs past a save point, you can undo the events you have done up to the save point using the rollback.\
\
Query : SAVE POINT  SAVEPOINT_NAME \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \cb1 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\b \cf3 \kerning1\expnd0\expndtw0  10) What is trigger and how to create  a Trigger in SQL?\
\
\pard\pardeftab720\partightenfactor0

\f3\b0 \AppleTypeServices\AppleTypeServicesF65539 \cf15 \cb8 \expnd0\expndtw0\kerning0
:- A trigger is a stored procedure in database which automatically invokes whenever a special event in the database occurs. For example, a trigger can be invoked when a row is inserted into a specified table or when certain table columns are being updated.\AppleTypeServices \cf0 \cb1 \kerning1\expnd0\expndtw0 \uc0\u8232 \cf4 \expnd0\expndtw0\kerning0
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\b \cf3 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\partightenfactor0

\f6\b0\fs32 \cf15 \expnd0\expndtw0\kerning0
 
\f3\fs36 create trigger [trigger_name] \
   [before | after]  \
   \{insert | update | delete\}  \
   on [table_name]  \
   [for each row]  \
   [trigger_body] \
\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\b \cf3 \kerning1\expnd0\expndtw0 11) CREATE table student and exam : \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f3\b0 \cf0 CREATE TABLE student\
(\
    RollNo int PRIMARY Key,\
    Name varchar(45),\
    Branch varchar(47)\
);\
\
INSERT INTO student(RollNo,Name,Branch)VALUES(1,"Jay","Computer Science");\
INSERT INTO student(RollNo,Name,Branch)VALUES(2,"Suhani","Electronic and Com");\
INSERT INTO student(RollNo,Name,Branch)VALUES(3,"Kriti","Electronic and Com");\
\
CREATE TABLE exam\
(\
    RollNo int,\
    S_code varchar(50),\
    Marks int,\
    P_code varchar(51),\
    FOREIGN KEY(RollNo)REFERENCES student(RollNO)\
);\
\
INSERT INTO exam (RollNo,S_code,Marks,P_code)VALUES(1,"CS11",50,"CS");\
INSERT INTO exam (RollNo,S_code,Marks,P_code)VALUES(1,"CS12",60,"CS");\
INSERT INTO exam (RollNo,S_code,Marks,P_code)VALUES(2,"EC101",66,"EC");\
INSERT INTO exam (RollNo,S_code,Marks,P_code)VALUES(2,"EC102",70,"EC");\
INSERT INTO exam (RollNo,S_code,Marks,P_code)VALUES(3,"EC101",45,"EC");\
INSERT INTO exam (RollNo,S_code,Marks,P_code)VALUES(3,"EC102",50,"EC");\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f5\b \cf3 12) Create Table Given Below :\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f3\b0 \cf0 CREATE TABLE Student\
(\
    First_Name varchar(50),\
    Last_Name varchar(52),\
    Address varchar(50),\
    City varchar(50),\
    Age int\
);\
\
INSERT INTO Student(First_Name,Last_Name,Address,City,Age)VALUES("Mickey","Mouse","123 Fantasy Way","Anaheim",73);\
INSERT INTO Student(First_Name,Last_Name,Address,City,Age)VALUES("Bat","Man","321 Cavern Ave","Gotham",54);\
INSERT INTO Student(First_Name,Last_Name,Address,City,Age)VALUES("Wonder","Woman","987 Truth Way","Paradise",39);\
INSERT INTO Student(First_Name,Last_Name,Address,City,Age)VALUES("Donald","Duck","555 Quak Street","Mallard",65);\
INSERT INTO Student(First_Name,Last_Name,Address,City,Age)VALUES("Bugs","Bunny","567 Carrot Street","Rascal",58);\
INSERT INTO Student(First_Name,Last_Name,Address,City,Age)VALUES("Wiley","Coyote","999 Acme Way","Canyon",61);\
INSERT INTO Student(First_Name,Last_Name,Address,City,Age)VALUES("Cat","Woman","234 Purrfect Street","Hairball",32);\
INSERT INTO Student(First_Name,Last_Name,Address,City,Age)VALUES("Tweety","Bird","543","Itotltaw",28);\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f5\b \cf3 \
\
13) Create table given below : Employee and Incentive\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f3\b0 \cf4 \expnd0\expndtw0\kerning0
CREATE TABLE Employee\
(\
    Employee_Id int,\
    First_Name varchar(50),\
    Last_Name varchar(52),\
    Salary int,\
    Joining_date int,\
    Department varchar(45)\
);\
\
INSERT INTO Employee(Employee_Id,First_Name,Last_Name,Salary,Joining_date,Department)VALUES(1,"John","Abraham",1000000,"01-JAN-13 12.00.00 AM","Banking");\
INSERT INTO Employee(Employee_Id,First_Name,Last_Name,Salary,Joining_date,Department)VALUES(2,"Michael","Clarke",800000,"01-JAN-13 12.00.00 AM","Insurance");\
INSERT INTO Employee(Employee_Id,First_Name,Last_Name,Salary,Joining_date,Department)VALUES(3,"Roy","Thomas",700000,"01-FEB-13 12.00.00 AM","Banking");\
INSERT INTO Employee(Employee_Id,First_Name,Last_Name,Salary,Joining_date,Department)VALUES(4,"Tom","Jose",600000,"01-FEB-13 12.00.00 AM","Insurance");\
INSERT INTO Employee(Employee_Id,First_Name,Last_Name,Salary,Joining_date,Department)VALUES(5,"Jerry","Pinto",650000,"01-FEB-13 12.00.00 AM","Insurance");\
INSERT INTO Employee(Employee_Id,First_Name,Last_Name,Salary,Joining_date,Department)VALUES(6,"Philip","Mathew",750000,"01-JAN-13 12.00.00 AM","Services");\
INSERT INTO Employee(Employee_Id,First_Name,Last_Name,Salary,Joining_date,Department)VALUES(7,"TestName1","123",650000,"01-JAN-13 12.00.00 AM","Services");\
INSERT INTO Employee(Employee_Id,First_Name,Last_Name,Salary,Joining_date,Department)VALUES(8,"TestName2","Lname%",600000,"01-FEB-13 12.00.00 AM","Insurance");\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f4 \cf5 \
\
\pard\pardeftab720\li40\fi-40\ri40\sa200\partightenfactor0

\f3 \cf4 \cb8 CREATE TABLE Incentive\
(\
    Employee_Ref_id int,\
    Incentive_date varchar(50),\
    Incentive_amount int\
);\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f7 \cf0 \cb1 \kerning1\expnd0\expndtw0 INSERT INTO Incentive(Employee_Ref_id,Incentive_date,Incentive_amount)VALUES(1,"01-FEB-13",5000);\
INSERT INTO Incentive(Employee_Ref_id,Incentive_date,Incentive_amount)VALUES(2,"01-FEB-13",3000);\
INSERT INTO Incentive(Employee_Ref_id,Incentive_date,Incentive_amount)VALUES(3,"01-FEB-13",4000);\
INSERT INTO Incentive(Employee_Ref_id,Incentive_date,Incentive_amount)VALUES(1,"01-JAN-13",4500);\
INSERT INTO Incentive(Employee_Ref_id,Incentive_date,Incentive_amount)VALUES(2,"01-JAN-13",3500);\
\pard\pardeftab720\li40\fi-40\ri40\sa200\partightenfactor0

\f3 \cf4 \cb8 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\li40\fi-40\ri40\sa200\partightenfactor0

\f2\b \cf16 \cb1 \kerning1\expnd0\expndtw0 a) Get First_Name from employee table using Tom name \'93Employee Name\'94. \
\pard\pardeftab720\li40\fi-40\ri40\sa200\partightenfactor0

\f3\b0 \cf4 \cb8 \expnd0\expndtw0\kerning0
=> SELECT * FROM Employee WHERE First_Name = \'93Tom";\
\
\pard\pardeftab720\li40\fi-40\ri40\sa200\partightenfactor0

\f2\b \cf16 \cb1 \kerning1\expnd0\expndtw0 b) Get FIRST_NAME, Joining Date, and Salary from employee table. 
\f3\b0 \cf3 \cb8 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\li40\fi-40\ri40\sa200\partightenfactor0
\cf4  => SELECT First_Name,Joining_date,Salary  FROM Employee;\
\
\pard\pardeftab720\li40\fi-40\ri40\sa200\partightenfactor0

\f2\b \cf16 \cb1 \kerning1\expnd0\expndtw0 c) Get all employee details from the employee table order by First_Name Ascending and Salary descending?
\f3\b0 \cf3 \expnd0\expndtw0\kerning0
 \cb8 \
\pard\pardeftab720\li40\fi-40\ri40\sa200\partightenfactor0
\cf4 => SELECT*FROM Employee ORDER BY First_Name ASC;\
\
 => SELECT*FROM Employee ORDER BY Salary DESC;\
\
\pard\pardeftab720\li40\fi-40\ri40\sa200\partightenfactor0

\f2\b \cf16 \cb1 \kerning1\expnd0\expndtw0 d) 
\fs37\fsmilli18667 Get employee details from employee table whose first name contains \'91J\'92. 
\f3\b0\fs36 \cf4 \cb8 \expnd0\expndtw0\kerning0
\
 => SELECT*FROM Employee WHERE First_Name LIKE '%J%';\
\

\f2\b \cf16 \cb1 \kerning1\expnd0\expndtw0 e) 
\fs37\fsmilli18667 Get department wise maximum salary from employee table order by salary ascending? 
\f3\b0\fs36 \cf3 \cb8 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\li40\fi-40\ri40\sa200\partightenfactor0
\cf4 => SELECT Department , MAX(Salary) AS Salary FROM Employee GROUP BY Department ORDER BY Salary ASC;\
\
\pard\pardeftab720\li40\fi-40\ri40\sa200\partightenfactor0

\f2\b \cf16 \cb1 \kerning1\expnd0\expndtw0 f) 
\fs37\fsmilli18667 Select first_name, incentive amount from employee and incentives table for those employees who have incentives and incentive amount greater than 3000 
\f3\b0\fs36 \cf4 \cb8 \expnd0\expndtw0\kerning0
\
=> SELECT Employee.First_Name,Incentive.Incentive_amount FROM Employee JOIN Incentive ON Employee_Ref_id = Employee_Ref_id WHERE Incentive.Incentive_amount > 3000;\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf4 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf3 14) Create table given below: Salesperson and Customer 
\f4 \uc0\u8232 \cf4 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f3 \cf2 :- To  Create Salesman table :\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf4 CREATE TABLE Salesperson\
(\
    SNo int PRIMARY KEY,\
    SNAME varchar(45),\
    CITY varchar(50),\
    COMM float\
);\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf2 :- To Insert the data in Salesperson :\cf4 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf3 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf4 INSERT INTO Salesperson(SNo,SNAME,CITY,COMM)VALUES(1001,"Peel","London",.12);\
INSERT INTO Salesperson(SNo,SNAME,CITY,COMM)VALUES(1002,"Serres","San Jose",.13);\
INSERT INTO Salesperson(SNo,SNAME,CITY,COMM)VALUES(1004,"Motika","London",.11);\
INSERT INTO Salesperson(SNo,SNAME,CITY,COMM)VALUES(1007,"Rafkin","Barcelona",.15);\
INSERT INTO Salesperson(SNo,SNAME,CITY,COMM)VALUES(1003,"Axelrod","New York",.1);\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf2 :- To Create Customer table :\cf4 \
\
CREATE TABLE Customer\
(\
    CNM int PRIMARY KEY,\
    CNAME varchar(50),\
    CITY varchar(47),\
    RATING int,\
    SNo int,\
    FOREIGN KEY(SNo)REFERENCES Salesperson(SNo)\
);\
\
\cf2 :- To Insert the data in Customer Table :\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf4 INSERT INTO Customer(CNM,CNAME,CITY,RATING,SNo)VALUES(201,"Hoffman","London",100,1001);\
INSERT INTO Customer(CNM,CNAME,CITY,RATING,SNo)VALUES(202,"Giovanne","Roe",200,1003);\
INSERT INTO Customer(CNM,CNAME,CITY,RATING,SNo)VALUES(203,"Liu","San Jose",300,1002);\
INSERT INTO Customer(CNM,CNAME,CITY,RATING,SNo)VALUES(204,"Grass","Barcelona",100,1002);\
INSERT INTO Customer(CNM,CNAME,CITY,RATING,SNo)VALUES(206,"Clemens","London",300,1007);\
INSERT INTO Customer(CNM,CNAME,CITY,RATING,SNo)VALUES(207,"Pereira","Roe",100,1004);
\f4 \
\
\pard\pardeftab720\sa240\partightenfactor0

\f2\b \cf16 \kerning1\expnd0\expndtw0 a) All orders for more than $1000.\uc0\u8232 
\f4\b0 \cf4 \expnd0\expndtw0\kerning0
:- SELECT*FROM Salesperson WHERE SNo > 1000;\
\

\f2\b\fs37\fsmilli18667 \cf16 \kerning1\expnd0\expndtw0 b) Names and cities of all salespeople in London with commission above 0.12 
\f5\fs24 \

\f4\b0\fs36 \cf4 :- SELECT SNAME,CITY FROM Salesperson WHERE CITY = 'London' AND COMM > 0.12;\
\

\f2\b\fs37\fsmilli18667 \cf16 c) All salespeople either in Barcelona or in London 
\f5\fs24 \

\f4\b0\fs36 \cf4 :-SELECT*FROM Salesperson WHERE CITY="London"OR"Barcelona";\
\

\f2\b\fs37\fsmilli18667 \cf16 d) All salespeople with commission between 0.10 and 0.12. (Boundary values should be excluded). 
\f5\fs24 \

\f4\b0\fs36 \cf4 :- SELECT*FROM Salesperson WHERE COMM BETWEEN 0.10 AND 0.12;\
\

\f2\b\fs37\fsmilli18667 \cf16 e) All customers excluding those with rating <= 100 unless they are located in Rome 
\f4\b0\fs24 \cf4 \expnd0\expndtw0\kerning0
\

\fs36 :- SELECT * FROM Customer WHERE RATING <= 100 OR CITY = 'Rome';\
\
}